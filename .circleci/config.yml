---
version: 2.1
jobs:
    build-and-send:
        docker:
                - image: python:3.8-alpine
        steps:
            - run:
                  name: Installation logiciels
                  command: |
                      sudo apt install git
            - run:
                  name: Récupération du projet propilot2pdf
                  command: |
                      mkdir -p /home/circleci/project
                      cd /home/circleci/project
                      mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
                      git clone $CIRCLE_REPOSITORY_URL --branch $CIRCLE_BRANCH
                      cd /home/circleci/project/propilot2pdf
                      if [ "$CIRCLE_BRANCH" != "master" ]; then
                        git fetch origin pull/$CIRCLE_PR_NUMBER/head:pull_local
                        git checkout pull_local
                      fi
            - run:
                  name: Installation des requirements
                  command: |
                      cd /home/circleci/project/propilot2pdf
                      pip3 install -r requirements.txt
                      python -m ipykernel install --user
            - run:
                  name: Chargement des données ProPilot
                  no_output_timeout: 1h
                  command: |
                      cd /home/circleci/project/propilot2pdf
                      jupyter nbconvert --to script --execute chargement_propilot.ipynb
                      FILE=pp_dep.csv
                      if test -f "$FILE"; then
                          echo "$FILE successfuly created."
                      fi
            - run:
                  name: Prodution des fiches parlementaires
                  no_output_timeout: 1h
                  command: |
                      cd /home/circleci/project/propilot2pdf
                      jupyter nbconvert --to script --execute build_reports.ipynb
                      FILE=./reports/pdf/Suivi_aides_entreprises_Ain.pdf
                      if test -f "$FILE"; then
                          echo "$FILE successfuly created."
                      else
                          echo "$FILE not found"
                          ls ./reports/pdf
                      fi
            - run:
                  name: Export des données en format csv
                  no_output_timeout: 1h
                  command: |
                      cd /home/circleci/project/propilot2pdf
                      jupyter nbconvert --to script --execute export_csv.ipynb
                      FILE=export_20210131.csv
                      if test -f "$FILE"; then
                          echo "$FILE successfuly created."
                      else
                          echo "$FILE not found"
                          ls .
                      fi
workflows:
  version: 2.1
  main:
    jobs:
      - build-and-send

  daily:
    jobs:
      - build-and-send
    triggers:
      - schedule:
          cron: 0 6 * * 2,3,4,5,6
          filters:
            branches:
              only:
                - master
