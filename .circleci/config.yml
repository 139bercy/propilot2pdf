---
version: 2.1
jobs:
    build-and-send:
        docker:
                - image: python:3.8
        steps:
            - run:
                  name: Installation des prérequis
                  command: |
                      apt-get update
                      apt-get install -y zip lftp
            - run:
                  name: Récupération du projet propilot2pdf
                  command: |
                      mkdir -p /home/circleci/project
                      cd /home/circleci/project
                      mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
                      git init
                      git clone $CIRCLE_REPOSITORY_URL
                      git config --global  user.email "circleci@circleci"
                      git config --global user.name "CircleCI"
            - run:
                  name : Récupération des données ProPilot
                  command: |
                      cd /home/circleci/project/propilot2pdf
                      echo "$DFAKTO_PK_BASE64" | base64 -d > dfakto.key
                      chmod 400 dfakto.key
                      chmod 777 ssh_askpass.sh
                      DISPLAY=1 SSH_ASKPASS="./ssh_askpass.sh" ssh-add dfakto.key < /dev/null
                      #ssh-keyscan -H sftp.ditp.dfakto.com >> ~/.ssh/known_hosts
                      cd data
                      rm *.csv
                      sftp -o StrictHostKeychecking=no -P 2022 -i ../dfakto.key ${USER_NAME}@sftp.ditp.dfakto.com \<<EOF
                      cd files
                      get *.csv
                      exit
            - run:
                  name: Installation des requirements Python
                  command: |
                      cd /home/circleci/project/propilot2pdf
                      pip3 install -r requirements.txt
                      python -m ipykernel install --user
            - run:
                  name: Chargement des données ProPilot
                  no_output_timeout: 1h
                  command: |
                      cd /home/circleci/project/propilot2pdf
                      jupyter nbconvert --to script --execute chargement_propilot.ipynb
                      FILE=pp_dep.csv
                      if test -f "$FILE"; then
                          echo "$FILE successfuly created."
                      fi
            - run:
                  name: Production des fiches parlementaires
                  no_output_timeout: 1h
                  command: |
                      cd /home/circleci/project/propilot2pdf
                      jupyter nbconvert --to python build_reports.ipynb
                      python build_reports.py
                      cd reports
                      #zip -9 archive.zip *.pdf
                      #git add archive.zip
                      git add *.pdf
                      git commit -m "add new reports [ci skip]"
                      git push
            - run:
                  name: Export des données en format csv
                  no_output_timeout: 1h
                  command: |
                      cd /home/circleci/project/propilot2pdf
                      jupyter nbconvert --to python export_csv.ipynb
                      python export_csv.py
                      FILE=export.csv
                      if test -f "$FILE"; then
                          echo "$FILE successfuly created."
                      else
                          echo "$FILE not found"
                          ls .
                      fi
                      lftp -u ${DEPLOY_USER}:${DEPLOY_PASSWORD} ${DEPLOY_HOST} -e "set ftp:ssl-force true ; cd propilot ; put $FILE ; quit"
                      if [ $? -eq 0 ]; then
                          echo "$FILE successfuly transfered."
                      fi
workflows:
  version: 2.1
  main:
    jobs:
      - build-and-send

  daily:
    jobs:
      - build-and-send
    triggers:
      - schedule:
          cron: 0 6 * * 2,3,4,5,6
          filters:
            branches:
              only:
                - master
